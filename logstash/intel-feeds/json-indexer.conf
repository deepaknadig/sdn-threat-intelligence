input {
  file {
    type => "json"
    codec => "json"
    path => "/home/ubuntu/intel/feeds/json/*"
    sincedb_path => "/var/tmp/.sincedb_threats"
    # sincedb_path => "/dev/null"
    exclude => "*.py"
    start_position => "beginning"
  }
}

filter {

  mutate {
    add_field => {"intel-type-metadata" => ""}
  }

  split {
    field => "[Event][Attribute]"
  }

  # IP Fields
  if [Event][Attribute][type] == "ip-src" {
    mutate {
      replace => [ "[Event][Attribute][type]", "IP" ]
      update => {"intel-type-metadata" => "ip-src"}
    }
  } else if [Event][Attribute][type] == "ip-dst" {
    mutate {
      replace => [ "[Event][Attribute][type]", "IP" ]
      update => {"intel-type-metadata" => "ip-dst"}
    }
  } else if [Event][Attribute][type] == "dst-ip" {
    mutate {
      replace => [ "[Event][Attribute][type]", "IP" ]
      update => {"intel-type-metadata" => "dst-ip"}
    }
  }

  # File Hash Fields
  if [Event][Attribute][type] == "sha256" {
    mutate {
      replace => [ "[Event][Attribute][type]", "FILEHASH" ]
      add_field => {"intel-type-metadata" => "sha256"}
    }
  } else if [Event][Attribute][type] == "md5" {
    mutate {
      replace => [ "[Event][Attribute][type]", "FILEHASH" ]
      add_field => {"intel-type-metadata" => "md5"}
    }
  } else if [Event][Attribute][type] == "sha1" {
    mutate {
      replace => [ "[Event][Attribute][type]", "FILEHASH" ]
      add_field => {"intel-type-metadata" => "sha1"}
    }
  } else if [Event][Attribute][type] == "sha224" {
    mutate {
      replace => [ "[Event][Attribute][type]", "FILEHASH" ]
      add_field => {"intel-type-metadata" => "sha224"}
    }
  } else if [Event][Attribute][type] == "sha384" {
    mutate {
      replace => [ "[Event][Attribute][type]", "FILEHASH" ]
      add_field => {"intel-type-metadata" => "sha384"}
    }
  } else if [Event][Attribute][type] == "sha512" {
    mutate {
      replace => [ "[Event][Attribute][type]", "FILEHASH" ]
      add_field => {"intel-type-metadata" => "sha512"}
    }
  }

  if [Event][Object] {
    mutate {
      remove_field => [ "[Event][Object]" ]
    }
  }

  mutate {
    rename => {
      "[Event][info]" => "intel-source"
      "[Event][analysis]" => "intel-analysis"
      "[Event][Attribute][comment]" => "comments"
      "[Event][Attribute][category]" => "intel-category"
      "[Event][Attribute][uuid]" => "intel-uuid"
      "[Event][Attribute][timestamp]" => "intel-timestamp"
      "[Event][Attribute][to_ids]" => "exportable-to-ids"
      "[Event][Attribute][value]" => "intel-value"
      "[Event][Attribute][type]" => "intel-type"
      "[Event][threat_level_id]" => "threat-level-id"
    }

    convert => {
      "intel-analysis" => "integer"
      "threat_level_id" => "integer"
    }

    add_tag => [ "misp_daily_updates" ]

    remove_field => [ "[Event]" ]
  }

  date {
    match => [ "intel-timestamp", "UNIX" ]
    target => "intel-timestamp"
  }

  translate {
    field => "intel-analysis"
    destination => "intel-analysis-code"
    dictionary => [
        "0", "Initial",
        "1", "Ongoing",
        "2", "Complete"
    ]
  }

  translate {
    field => "threat-level-id"
    destination => "threat-level-code"
    dictionary => [
        "1", "High",
        "2", "Medium",
        "3", "Low",
        "4", "Undefined"
    ]
  }

  grok {
    match => { "intel-value" => "%{IP:intel-ip}"}
    tag_on_failure => [ ]
  }

  # add geoip attributes
  geoip {
    source => "intel-ip"
    tag_on_failure => [ ]
  }

  # Fingerprinting to remove duplicates
  fingerprint {
    concatenate_sources => true
    source => ["intel_type", "intel-value"]
    target => "[@metadata][fingerprint]"
    method => "MURMUR3"
  }

  if "_jsonparsefailure" in [tags] {
    drop { }
  }
}

output {
  stdout { codec => rubydebug }
  elasticsearch {
      hosts => localhost
      document_id => "%{[@metadata][fingerprint]}"
      index => "threats-%{+YYYY.MM.dd}"
  }
}

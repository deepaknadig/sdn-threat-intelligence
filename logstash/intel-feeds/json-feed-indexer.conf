input {
  file {
    type => "json"
    codec => "json"
    path => "/home/ubuntu/intel/json2/*"
    sincedb_path => "/var/tmp/.sincedb_threats"
    # sincedb_path => "/dev/null"
    # exclude => "*.py"
    start_position => "beginning"
  }
}

filter {

  split {
    field => "[Event]"
  }

  # New Fields
  mutate {
    add_field => {"intel-has-subtypes" => ""}
    add_field => {"intel-subtype-1" => ""}
    add_field => {"intel-subtype-2" => ""}
    add_field => {"intel-subtype-3" => ""}
    add_field => {"intel-type-metadata" => ""}

    rename => {"[Event][analysis]" => "intel-analysis"}
    rename => {"[Event][threat_level_id]" => "threat-level-id"}
    rename => {"[Event][info]" => "intel-source"}
    rename => {"[Event][org]" => "intel-organization"}
    rename => {"[Event][published]" => "intel-published"}

    rename => {"[Event][timestamp]" => "intel-timestamp"}
    rename => {"[Event][category]" => "intel-category"}
    rename => {"[Event][comment]" => "comments"}
    rename => {"[Event][uuid]" => "intel-uuid"}
    rename => {"[Event][to_ids]" => "exportable-to-ids"}
    rename => {"[Event][value]" => "intel-value"}
    rename => {"[Event][type]" => "intel-type"}

    convert => {
      "intel-analysis" => "integer"
      "threat-level-id" => "integer"
    }

    add_tag => [ "misp_daily_updates" ]

    remove_field => [ "[Event]" ]
  }

  ############################################################################
  # Field Processing Begins
  ############################################################################
  # IP Fields
  if "intel-type" == "ip-src" {
    mutate {
      replace => [ "intel-type", "IP" ]
      update => {"intel-type-metadata" => "ip-src"}
    }
  } else if "intel-type" == "ip-dst" {
    mutate {
      replace => [ "intel-type", "IP" ]
      update => {"intel-type-metadata" => "ip-dst"}
    }
  } else if "intel-type" == "dst-ip" {
    mutate {
      replace => [ "intel-type", "IP" ]
      update => {"intel-type-metadata" => "dst-ip"}
    }
  }

  # File Hash Fields
  if "intel-type" == "sha256" {
    mutate {
      replace => [ "intel-type", "FILEHASH" ]
      update => {"intel-type-metadata" => "sha256"}
    }
  } else if "intel-type" == "md5" {
    mutate {
      replace => [ "intel-type", "FILEHASH" ]
      update => {"intel-type-metadata" => "md5"}
    }
  } else if "intel-type" == "sha1" {
    mutate {
      replace => [ "intel-type", "FILEHASH" ]
      update => {"intel-type-metadata" => "sha1"}
    }
  } else if "intel-type" == "sha224" {
    mutate {
      replace => [ "intel-type", "FILEHASH" ]
      update => {"intel-type-metadata" => "sha224"}
    }
  } else if "intel-type" == "sha384" {
    mutate {
      replace => [ "intel-type", "FILEHASH" ]
      update => {"intel-type-metadata" => "sha384"}
    }
  } else if "intel-type" == "sha512" {
    mutate {
      replace => [ "intel-type", "FILEHASH" ]
      update => {"intel-type-metadata" => "sha512"}
    }
  } else if "intel-type" == "filename|sha256" {
    mutate {
      split => { "intel-type" => "|" }
      update => {"intel-type" => "{%intel-type[0]}"}
      update => {"intel-subtype-1" => "{%intel-type[1]}"}
      update => {"intel-has-subtypes" => true}
    }
  }

  ############################################################################
  # Field Processing Ends
  ############################################################################

  grok {
    match => { "intel-value" => "%{IP:intel-ip}"}
    tag_on_failure => [ ]
  }

  # add geoip attributes
  geoip {
    source => "intel-ip"
    tag_on_failure => [ ]
  }

  date {
    match => [ "intel-timestamp", "UNIX" ]
    target => "intel-timestamp"
  }

  translate {
    field => "intel-analysis"
    destination => "intel-analysis-code"
    dictionary => [
        "0", "Initial",
        "1", "Ongoing",
        "2", "Complete"
    ]
  }

  translate {
    field => "threat-level-id"
    destination => "threat-level-code"
    dictionary => [
        "1", "High",
        "2", "Medium",
        "3", "Low",
        "4", "Undefined"
    ]
  }

  # Fingerprinting to remove duplicates
  fingerprint {
    concatenate_sources => true
    source => ["intel-type", "intel-value"]
    target => "[@metadata][fingerprint]"
    method => "MURMUR3"
  }

  if "_jsonparsefailure" in [tags] {
    drop { }
  }
}

output {
  stdout { codec => rubydebug }
  elasticsearch {
      hosts => localhost
      document_id => "%{[@metadata][fingerprint]}"
      index => "intel"
  }
}

#######################################################################################################################
# This file provides a feed-specific template for indexing threats.
#
# The "filter" section defines all the fields required by the threat intelligence index. Additional
# pre-processing of the feeds may be necessary to conform to the standard format of the repository.
#
# Uncomment the "input", "filter" and "output" sections to create a feed indexer.
#######################################################################################################################

# The input section
input {
  file {
    add_field => { "[@metadata][source_type]" => "feed-name" }
    path => "/path/to/file/or/directory"
    sincedb_path => "/var/tmp/.sincedb_threats"
    start_position => "beginning"
}

}

# The filter section
filter {

  mutate {

    add_field => { "comments" => "" }
    add_field => { "exportable-to-ids" => "true" }
    add_field => { "threat-analysis-code" => "2" }
    add_field => { "threat-category" => "" }
    add_field => { "threat-level-id" => "" }
    add_field => { "threat-organization" => "" }
    add_field => { "threat-published" => "true" }
    add_field => { "threat-source" => "" }
    add_field => { "threat-timestamp" => "" }
    add_field => { "threat-uuid" => "" }

    convert => {
      "exportable-to-ids" => "boolean"
      "threat-analysis" => "integer"
      "threat-level-id" => "integer"
      "threat-has-types" => "boolean"
      "threat-has-values" => "boolean"
      "threat-published" => "boolean"
    }

    # Add Tag(s)
    add_tag => [ "ext_feed_updates" ]

  }

  # Translations for Codes and Analysis
  translate {
    field => "threat-analysis"
    destination => "threat-analysis-code"
    dictionary => [
      "0", "Initial",
      "1", "Ongoing",
      "2", "Complete"
    ]
  }

    translate {
    field => "threat-level-id"
    destination => "threat-level-code"
    dictionary => [
      "1", "High",
      "2", "Medium",
      "3", "Low",
      "4", "Undefined"
    ]
  }

    # Handle Date Objects
    date {
      match => [ "threat-timestamp", "UNIX" ]
      target => "threat-timestamp"
    }

    # Parse IP for GeoIP coordinates
    # Adds an additional "threat-ip" field
    grok {
      match => { "threat-value" => "%{IP:threat-ip}"}
      tag_on_failure => [ ]
    }

    geoip {
      source => "threat-ip"
      tag_on_failure => [ ]
    }

    # Fingerprinting to remove duplicates
    fingerprint {
      concatenate_sources => true
      source => ["threat-type", "threat-value"]
      target => "[@metadata][fingerprint]"
      method => "MURMUR3"
    }

    if "_jsonparsefailure" in [tags] {
      drop { }
    }

}

# The output section
output {
  stdout {
    codec => rubydebug
    }

  elasticsearch {
    hosts => localhost
    document_id => "%{[@metadata][fingerprint]}"
    index => "threats"
    }
}
